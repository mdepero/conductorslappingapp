model UrbanPrimary "Transients on an urban primary with P-P loads and a neutral reactor"
  import Modelica.Constants.pi;
  parameter Modelica.SIunits.Frequency freqHz = 60.0 "Frequency";
  model ThreePhaseSource "A three-phase wye-connected voltage source"
    import Modelica.Math.sin;
    import Modelica.Math.cos;
    parameter Modelica.SIunits.Voltage V = 13800.0 "RMS voltage, line to line";
    parameter Modelica.SIunits.Resistance R = 0.2 "Source resistance";
    parameter Modelica.SIunits.Frequency freqHz = 60.0 "Frequency";
    parameter Modelica.SIunits.Impedance X = 1.0 "Source reactance";
    parameter Modelica.SIunits.Inductance L = X / (2 * pi * freqHz) "Source inductance";
    Modelica.Electrical.Analog.Sources.SineVoltage V1(V = V / sqrt(3 / 2), freqHz = freqHz, phase = 0) annotation(Placement(visible = true, transformation(origin = {40.2336,3.59813}, extent = {{-10,-10},{10,10}}, rotation = 270)));
    Modelica.Electrical.Analog.Sources.SineVoltage V2(V = V / sqrt(3 / 2), freqHz = freqHz, phase = 2 * pi / 3) annotation(Placement(visible = true, transformation(origin = {0,3.59813}, extent = {{-10,-10},{10,10}}, rotation = 270)));
    Modelica.Electrical.Analog.Sources.SineVoltage V3(V = V / sqrt(3 / 2), freqHz = freqHz, phase = -2 * pi / 3) annotation(Placement(visible = true, transformation(origin = {-40,3.59813}, extent = {{-10,-10},{10,10}}, rotation = 270)));
    Modelica.Electrical.Analog.Basic.Resistor resistor1(R = R) annotation(Placement(visible = true, transformation(origin = {40.1869,58.1776}, extent = {{-10,-10},{10,10}}, rotation = -90)));
    Modelica.Electrical.Analog.Basic.Resistor resistor2(R = R) annotation(Placement(visible = true, transformation(origin = {0.140187,58.3178}, extent = {{-10,-10},{10,10}}, rotation = -90)));
    Modelica.Electrical.Analog.Basic.Resistor resistor3(R = R) annotation(Placement(visible = true, transformation(origin = {-39.9065,57.5234}, extent = {{-10,-10},{10,10}}, rotation = -90)));
    Modelica.Electrical.Analog.Basic.Inductor inductor1(L = L) annotation(Placement(visible = true, transformation(origin = {40.1869,29.9065}, extent = {{-10,-10},{10,10}}, rotation = -90)));
    Modelica.Electrical.Analog.Basic.Inductor inductor2(L = L) annotation(Placement(visible = true, transformation(origin = {0.140187,29.8131}, extent = {{-10,-10},{10,10}}, rotation = -90)));
    Modelica.Electrical.Analog.Basic.Inductor inductor3(L = L) annotation(Placement(visible = true, transformation(origin = {-39.9065,29.9533}, extent = {{-10,-10},{10,10}}, rotation = -90)));
    Modelica.Electrical.Analog.Interfaces.PositivePin pin1 annotation(Placement(visible = true, transformation(origin = {40.0935,80}, extent = {{-10,-10},{10,10}}, rotation = 0), iconTransformation(origin = {80.6542,-80.4206}, extent = {{-9.85981,-9.85981},{9.85981,9.85981}}, rotation = 0)));
    Modelica.Electrical.Analog.Interfaces.PositivePin pin2 annotation(Placement(visible = true, transformation(origin = {-0.186914,80.8411}, extent = {{-10,-10},{10,10}}, rotation = 0), iconTransformation(origin = {-79.6262,-80.3739}, extent = {{-10,-10},{10,10}}, rotation = 0)));
    Modelica.Electrical.Analog.Interfaces.PositivePin pin3 annotation(Placement(visible = true, transformation(origin = {-40.4673,80.514}, extent = {{-10,-10},{10,10}}, rotation = 0), iconTransformation(origin = {0.42055,89.8598}, extent = {{-10,-10},{10,10}}, rotation = 0)));
    Modelica.Electrical.Analog.Interfaces.NegativePin pin_n annotation(Placement(visible = true, transformation(origin = {0,-40}, extent = {{-10,-10},{10,10}}, rotation = 0), iconTransformation(origin = {0.467286,-63.3645}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  protected
    Real w = 2 * pi * freqHz;
    Real P[3,3] = sqrt(2 / 3) * [sin(w * time),sin(w * time + 2 * pi / 3),sin(w * time + 4 * pi / 3);cos(w * time),cos(w * time + 2 * pi / 3),cos(w * time + 4 * pi / 3);1 / sqrt(2),1 / sqrt(2),1 / sqrt(2)] "Park Transformation matrix";
    Modelica.SIunits.Current i_abc[3] = {V1.i,V2.i,V3.i};
    Real i_dq0[3];
    Real di_dq0[3] = 2 * pi * {i_dq0[2],-i_dq0[1],0} + P * der(i_abc);
  initial equation
    di_dq0 = {0,0,0};
  equation
    connect(resistor3.p,pin3) annotation(Line(points = {{-39.9065,67.5234},{-39.9065,79.9065},{-39.486,79.9065},{-39.486,79.9065}}));
    connect(resistor2.p,pin2) annotation(Line(points = {{0.140187,68.3178},{0.140187,80.3738},{0.233645,80.3738},{0.233645,80.3738}}));
    connect(resistor1.p,pin1) annotation(Line(points = {{40.1869,68.1776},{40.1869,79.9065},{40.6542,79.9065},{40.6542,79.9065}}));
    connect(inductor3.p,resistor3.n) annotation(Line(points = {{-39.9065,39.9533},{-39.9065,47.1963},{-39.7196,47.1963},{-39.7196,47.1963}}));
    connect(inductor2.p,resistor2.n) annotation(Line(points = {{0.140187,39.8131},{0.140187,48.1308},{0.233645,48.1308},{0.233645,48.1308}}));
    connect(inductor1.p,resistor1.n) annotation(Line(points = {{40.1869,39.9065},{40.1869,47.8972},{40.4206,47.8972},{40.4206,47.8972}}));
    connect(V3.p,inductor3.n) annotation(Line(points = {{-40,13.5981},{-40,20.3271},{-39.486,20.3271},{-39.486,20.3271}}));
    connect(V2.p,inductor2.n) annotation(Line(points = {{0.00000000000000183691,13.5981},{0.00000000000000183691,19.8598},{0.233645,19.8598},{0.233645,19.8598}}));
    connect(V1.p,inductor1.n) annotation(Line(points = {{40.2336,13.5981},{40.2336,19.6262},{40.1869,19.6262},{40.1869,19.6262}}));
    connect(V1.n,V2.n) annotation(Line(points = {{40.2336,-6.40187},{-0.00000000000000177636,-6.40187}}, color = {0,0,255}, smooth = Smooth.Bezier));
    connect(V2.n,pin_n) annotation(Line(points = {{-0.00000000000000183691,-6.40187},{-0.00000000000000183691,-6.40187},{0,-10},{0,-40}}, color = {0,0,255}, smooth = Smooth.Bezier));
    connect(V3.n,V2.n) annotation(Line(points = {{-40,-6.40187},{-0.00000000000000177636,-6.40187}}, color = {0,0,255}, smooth = Smooth.Bezier));
    i_dq0 = P * i_abc;
    annotation(Placement(transformation(extent = {{-10,-10},{10,10}}, rotation = 0)), Diagram(graphics), Icon(coordinateSystem(extent = {{-100,-100},{100,100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {2,2}), graphics = {Ellipse(origin = {0.934575,-21.9626}, lineColor = {0,0,255}, fillColor = {255,255,255}, fillPattern = FillPattern.Solid, lineThickness = 0.75, extent = {{-40,60},{40,-20}}, endAngle = 360),Text(origin = {1.63552,-17.8972}, lineColor = {95,95,95}, fillColor = {95,95,95}, fillPattern = FillPattern.Solid, lineThickness = 0.5, extent = {{-40,60},{40,-20}}, textString = "~"),Line(origin = {-44.743,-49.7664}, points = {{-38.4346,-32.9439},{18.8084,17.0561},{18.8084,17.0561}}, color = {0,0,255}, thickness = 2),Line(origin = {34.3692,-37.0093}, points = {{-5.25705,5.37386},{46.1449,-43.2243}}, color = {0,0,255}, thickness = 2),Line(origin = {5.53738,74.3458}, points = {{-5.25705,5.37386},{-5.25701,-35.9813}}, color = {0,0,255}, thickness = 2),Line(origin = {5.67757,-47.9439}, points = {{-5.25705,5.37386},{-5.25701,-5.14015}}, color = {0,0,255}, thickness = 2)}));
  end ThreePhaseSource;
  model CableCircuit "A single-phase cable with loop impedance"
    extends Modelica.Electrical.Analog.Interfaces.TwoPin;
    parameter Modelica.SIunits.Resistance R = 0.2 "Cable resistance";
    parameter Modelica.SIunits.Impedance X = 1.0 "Cable reactance";
    parameter Modelica.SIunits.Frequency freqHz = 60.0 "Frequency";
    parameter Modelica.SIunits.Inductance L = X / (2 * pi * freqHz) "Cable inductance";
    Modelica.Electrical.Analog.Basic.Inductor inductor1(L = L) annotation(Placement(visible = true, transformation(origin = {9.49576,0.10731}, extent = {{-10,-10},{10,10}}, rotation = 0)));
    Modelica.Electrical.Analog.Basic.Resistor resistor1(R = R) annotation(Placement(visible = true, transformation(origin = {-20.531,0.26726}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  equation
    connect(p,resistor1.p) annotation(Line(points = {{-100,0},{-30.8411,0},{-30.8411,0.233645},{-30.8411,0.233645}}));
    connect(resistor1.n,inductor1.p) annotation(Line(points = {{-10.531,0.26726},{-0.700935,0.26726},{-0.700935,-0.46729},{-0.700935,-0.46729}}));
    connect(inductor1.n,n) annotation(Line(points = {{19.4958,0.10731},{99.7664,0.10731},{99.7664,0},{100,0}}));
    annotation(Diagram(graphics), Icon(coordinateSystem(extent = {{-100,-100},{100,100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {2,2}), graphics = {Rectangle(origin = {-8.36449,40}, rotation = -90, lineColor = {170,85,255}, fillColor = {227,227,227}, pattern = LinePattern.None, fillPattern = FillPattern.VerticalCylinder, extent = {{34,88},{46,-30}}),Rectangle(origin = {4.11214,48.9719}, rotation = -90, fillColor = {191,159,127}, pattern = LinePattern.None, fillPattern = FillPattern.VerticalCylinder, extent = {{39.5234,68.5981},{58,-50}}),Rectangle(origin = {-7.33644,49.6729}, rotation = -90, fillColor = {98,98,98}, pattern = LinePattern.None, fillPattern = FillPattern.VerticalCylinder, extent = {{39.6262,73.3178},{60.2336,-70.2804}}),Rectangle(origin = {-90.3038,54.6729}, extent = {{180.257,-86.4486},{0.584161,-24.2991}})}));
  end CableCircuit;
  parameter Modelica.SIunits.Voltage Vll = 13800.0 "RMS system voltage, line-line";
  parameter Modelica.SIunits.Power VA = 50000000.0 "Transformer VA";
  parameter Real Xpcnt = 15.0 "Transformer impedance, percent";
  parameter Integer Ntran = 3 "Number of substation transformers in parallel";
  parameter Real XRtran = 5.0 "X/R ratio of the substation transformer(s)";
  parameter Modelica.SIunits.Impedance Xneutral = 1.0 "Neutral reactance, ohms";
  parameter Real XRneutral = 5.0 "X/R ratio of the neutral reactor";
  parameter Modelica.SIunits.Resistance Rcable = 0.07 "Cable resistance";
  parameter Modelica.SIunits.Impedance Xcable = 0.07 "Cable reactance";
  parameter Modelica.SIunits.Voltage Vp = Vll / sqrt(3.0) * sqrt(2.0) "Peak L-N voltage";
  parameter Modelica.SIunits.Impedance Zbase = Vll * Vll / VA / Ntran "Base source impedance";
  parameter Modelica.SIunits.Impedance Xt = Zbase * Xpcnt / 100.0 "Source reactance";
  parameter Modelica.SIunits.Resistance Rt = Xt / XRtran "Source resistance";
  parameter Modelica.SIunits.Inductance Lneutral = Xneutral / (2.0 * pi * 60.0) / Ntran "Neutral inductance";
  parameter Modelica.SIunits.Resistance Rneutral = Xneutral / XRneutral "Neutral resistance";
  parameter Modelica.SIunits.Capacitance Ccables = 0.000001 "Capacitance to ground per phase of all connected cables";
  parameter Real faultTime = 1.25 "Time when the fault occurs, cycles";
  Modelica.Electrical.Analog.Basic.Capacitor Ca(C = Ccables) annotation(Placement(visible = true, transformation(origin = {-3.83182,-6.0717}, extent = {{-10,-10},{10,10}}, rotation = 270)));
  Modelica.Electrical.Analog.Basic.Capacitor Cb(C = Ccables) annotation(Placement(visible = true, transformation(origin = {-64.2051,-6.4953}, extent = {{-10,-10},{10,10}}, rotation = 270)));
  Modelica.Electrical.Analog.Basic.Capacitor Cc(C = Ccables) annotation(Placement(visible = true, transformation(origin = {-72.9811,54.1381}, extent = {{-10,-10},{10,10}}, rotation = 270)));
  Modelica.Blocks.Sources.BooleanExpression booleanExpression(y = time > faultTime / freqHz and time < 0.1) annotation(Placement(visible = true, transformation(origin = {53.536,28.7025}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  Modelica.Electrical.Analog.Basic.Ground Ga annotation(Placement(visible = true, transformation(origin = {-3.83182,-32.9628}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  Modelica.Electrical.Analog.Basic.Ground Gb annotation(Placement(visible = true, transformation(origin = {-64.2051,-32.4958}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  Modelica.Electrical.Analog.Basic.Ground Gc annotation(Placement(visible = true, transformation(origin = {-72.9811,28.1381}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  Modelica.Electrical.Analog.Basic.Ground Gx annotation(Placement(visible = true, transformation(origin = {81.536,-25.8956}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  Modelica.Electrical.Analog.Basic.Inductor Ln(L = Lneutral) annotation(Placement(visible = true, transformation(origin = {-32.3834,-46.4958}, extent = {{-10,-10},{10,10}}, rotation = 270)));
  Modelica.Electrical.Analog.Basic.Ground ground annotation(Placement(visible = true, transformation(origin = {-32.3834,-72.4958}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  Modelica.Electrical.Analog.Basic.Resistor Rn(R = Rneutral) annotation(Placement(visible = true, transformation(origin = {-32.5405,-18.2838}, extent = {{-10,-10},{10,10}}, rotation = -90)));
  UrbanPrimary.ThreePhaseSource threephasesource1(V = Vll, X = Xt, R = Rt) annotation(Placement(visible = true, transformation(origin = {-33.1771,28.972}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  UrbanPrimary.CableCircuit cablecircuit1(R = Rcable, X = Xcable) annotation(Placement(visible = true, transformation(origin = {30.8411,3.97196}, extent = {{-10,-10},{10,10}}, rotation = 0)));
  Modelica.SIunits.Voltage Va = Ca.v "Phase A voltage, L-G";
  Modelica.SIunits.Voltage Vb = Cb.v "Phase B voltage, L-G";
  Modelica.SIunits.Voltage Vc = Cc.v "Phase C voltage, L-G";
  Modelica.SIunits.Voltage Vs = Va + Vb + Vc "Zero-sequence voltage";
  Modelica.Electrical.Analog.Ideal.CloserWithArc fault annotation(Placement(visible = true, transformation(origin = {71.2996,4.00157}, extent = {{-10,-10},{10,10}}, rotation = 0)));
equation
  connect(fault.n,Gx.p) annotation(Line(points = {{81.2996,4.00157},{81.5242,4.00157},{81.5242,-16.3972},{81.5242,-16.3972}}));
  connect(cablecircuit1.n,fault.p) annotation(Line(points = {{40.8411,3.97196},{61.2009,3.97196},{61.2009,3.9261},{61.2009,3.9261}}));
  connect(booleanExpression.y,fault.control) annotation(Line(points = {{64.536,28.7025},{71.0687,14.0016},{71.2996,14.0016}}, color = {255,0,255}));
  connect(Ca.p,cablecircuit1.p) annotation(Line(points = {{-3.83182,3.9283},{-3.83182,3.73832},{20.8411,3.73832},{20.8411,3.97196}}));
  connect(threephasesource1.pin1,Ca.p) annotation(Line(points = {{-25.1117,20.9299},{-24.7451,20.9299},{-24.7451,12.1381},{-3.66031,12.1381},{-3.83182,2.80377},{-3.83139,3.92839}}));
  connect(threephasesource1.pin3,Cc.p) annotation(Line(points = {{-33.1351,37.958},{-33.0601,37.7244},{-33.0601,63.5775},{-72.8541,63.5775},{-72.8541,63.8111}}));
  connect(Rn.p,threephasesource1.pin_n) annotation(Line(points = {{-32.5405,-8.2838},{-32.3068,23.5981},{-32.4294,22.4019},{-33.1304,22.6355}}));
  connect(Cb.p,threephasesource1.pin2) annotation(Line(points = {{-64.2051,3.5047},{-64.2051,11.9159},{-41.1215,11.9159},{-41.1215,20.5608},{-41.1215,20.7944}}));
  connect(Ln.p,Rn.n) annotation(Line(points = {{-32.3834,-36.4958},{-32.1498,-28.5046},{-32.5405,-28.5046},{-32.5405,-28.2838}}));
  connect(ground.p,Ln.n) annotation(Line(points = {{-32.3834,-62.4958},{-32.3834,-56.4958}}, color = {0,0,255}));
  connect(Cc.n,Gc.p) annotation(Line(points = {{-72.9811,44.1381},{-72.9811,38.1381}}, color = {0,0,255}));
  connect(Cb.n,Gb.p) annotation(Line(points = {{-64.2051,-16.4953},{-64.2051,-22.4958}}, color = {0,0,255}));
  connect(Ca.n,Ga.p) annotation(Line(points = {{-3.83182,-16.0717},{-3.83182,-22.9628}}, color = {0,0,255}));
  annotation(experiment(StartTime = 0, StopTime = 0.14, Tolerance = 0.0001), Diagram(coordinateSystem(extent = {{-100,-100},{100,100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {1,1})), Icon(coordinateSystem(extent = {{-100,-100},{100,100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {1,1})));
end UrbanPrimary;

